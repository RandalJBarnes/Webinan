//=============================================================================
// read_data.cpp
//
//    The driver for the command line version of the user interface.
//
// author:
//    Dr. Randal J. Barnes
//    Department of Civil, Environmental, and Geo- Engineering
//    University of Minnesota
//
// version:
//    14 June 2017
//=============================================================================
#include <algorithm>
//#include <exception>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <limits>
#include <string>
#include <vector>

#include "engine.h"
#include "now.h"
#include "numerical_constants.h"
#include "read_data.h"
#include "version.h"

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
InputData read_data( std::string inpfilename )
{
   // Open the specified data file.
   std::ifstream inpfile( inpfilename );
   if( inpfile.fail() )
   {
      std::stringstream message;
      message << "Could not open <" << inpfilename << "> for input.";
      throw std::runtime_error( message.str() );
   }

   // Get the input data.
   InputData data = {};

   std::string line;
   while( std::getline(inpfile, line) )
   {
      std::replace( line.begin(), line.end(), ',', ' ' );
      std::istringstream is(line);

      std::string ii;
      double xx, yy, zz;

      if( is >> ii >> xx >> yy >> zz )
      {
         DataRecord obs = { ii, xx, yy, zz };
         data.obs.push_back( obs );
      }
      else
      {
         inpfile.close();
         std::stringstream message;
         message << "Reading the observation data failed on line " << data.obs.size()+1 << " of file " << inpfilename << ".";
         throw std::runtime_error( message.str() );
      }
   }
   inpfile.close();

   int N = data.obs.size();
   std::cout << N << " data records read from <" << inpfilename << ">." << std::endl;

   return data;
}
